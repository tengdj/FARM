//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-33191640
// Cuda compilation tools, release 12.2, V12.2.140
// Based on NVVM 7.0.1
//

.version 8.2
.target sm_75
.address_size 64

	// .globl	__intersection__intersects_envelope_query_2d_forward
.weak .global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3};
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33026thrust6system6detail10sequential3seqE[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33026thrust8cuda_cub3parE[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33026thrust8cuda_cub10par_nosyncE[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33026thrust12placeholders2_1E[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33026thrust12placeholders2_2E[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33026thrust12placeholders2_3E[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33026thrust12placeholders2_4E[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33026thrust12placeholders2_5E[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33026thrust12placeholders2_6E[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33026thrust12placeholders2_7E[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33026thrust12placeholders2_8E[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33026thrust12placeholders2_9E[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33026thrust12placeholders3_10E[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33026thrust3seqE[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33024cuda3std3__48in_placeE[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33024cuda3std6ranges3__45__cpo4swapE[1];
.global .align 1 .b8 __nv_static_61__a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf3302__ZN70_INTERNAL_a6b88e57_39_shaders_intersects_envelope_query_2d_cu_71bf33024cuda3std6ranges3__45__cpo9iter_moveE[1];
.extern .const .align 8 .b8 params[64];

.visible .entry __intersection__intersects_envelope_query_2d_forward()
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<57>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<22>;


	// begin inline asm
	call (%r2), _optix_read_primitive_idx, ();
	// end inline asm
	mov.u32 	%r4, 0;
	// begin inline asm
	call (%r3), _optix_get_payload, (%r4);
	// end inline asm
	// begin inline asm
	call (%r5), _optix_read_instance_id, ();
	// end inline asm
	ld.const.u64 	%rd3, [params];
	cvta.to.global.u64 	%rd4, %rd3;
	mul.wide.u32 	%rd5, %r5, 8;
	add.s64 	%rd6, %rd4, %rd5;
	cvt.u64.u32 	%rd7, %r2;
	ld.global.u64 	%rd8, [%rd6];
	add.s64 	%rd1, %rd8, %rd7;
	ld.const.u64 	%rd9, [params+16];
	cvta.to.global.u64 	%rd10, %rd9;
	ld.const.u64 	%rd11, [params+32];
	cvta.to.global.u64 	%rd12, %rd11;
	mul.wide.u32 	%rd13, %r3, 16;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.v2.f32 	{%f13, %f14}, [%rd14+8];
	ld.global.v2.f32 	{%f15, %f16}, [%rd14];
	sub.f32 	%f17, %f15, %f13;
	shl.b64 	%rd15, %rd1, 4;
	add.s64 	%rd2, %rd10, %rd15;
	rcp.rn.f32 	%f18, %f17;
	ld.global.f32 	%f5, [%rd2];
	sub.f32 	%f19, %f5, %f13;
	mul.f32 	%f20, %f18, %f19;
	ld.global.f32 	%f6, [%rd2+8];
	sub.f32 	%f21, %f6, %f13;
	mul.f32 	%f22, %f18, %f21;
	setp.gt.f32 	%p1, %f20, %f22;
	selp.f32 	%f23, %f20, %f22, %p1;
	selp.f32 	%f24, %f22, %f20, %p1;
	mul.f32 	%f25, %f23, 0f3F800006;
	max.f32 	%f7, %f24, 0f00000000;
	min.f32 	%f8, %f25, 0f3F800001;
	setp.gt.f32 	%p2, %f7, %f8;
	@%p2 bra 	$L__BB0_5;

	sub.f32 	%f26, %f14, %f16;
	rcp.rn.f32 	%f27, %f26;
	ld.global.f32 	%f9, [%rd2+4];
	sub.f32 	%f28, %f9, %f16;
	mul.f32 	%f29, %f27, %f28;
	ld.global.f32 	%f10, [%rd2+12];
	sub.f32 	%f30, %f10, %f16;
	mul.f32 	%f31, %f27, %f30;
	setp.gt.f32 	%p3, %f29, %f31;
	selp.f32 	%f32, %f29, %f31, %p3;
	selp.f32 	%f33, %f31, %f29, %p3;
	mul.f32 	%f34, %f32, 0f3F800006;
	setp.gt.f32 	%p4, %f33, %f7;
	selp.f32 	%f35, %f33, %f7, %p4;
	setp.lt.f32 	%p5, %f34, %f8;
	selp.f32 	%f36, %f34, %f8, %p5;
	setp.gt.f32 	%p6, %f35, %f36;
	@%p6 bra 	$L__BB0_5;

	sub.f32 	%f37, %f6, %f5;
	rcp.rn.f32 	%f38, %f37;
	sub.f32 	%f39, %f15, %f5;
	mul.f32 	%f40, %f38, %f39;
	sub.f32 	%f41, %f13, %f5;
	mul.f32 	%f42, %f38, %f41;
	setp.gt.f32 	%p7, %f40, %f42;
	selp.f32 	%f43, %f40, %f42, %p7;
	selp.f32 	%f44, %f42, %f40, %p7;
	mul.f32 	%f45, %f43, 0f3F800006;
	max.f32 	%f11, %f44, 0f00000000;
	min.f32 	%f12, %f45, 0f3F800001;
	setp.gt.f32 	%p8, %f11, %f12;
	@%p8 bra 	$L__BB0_4;

	sub.f32 	%f46, %f10, %f9;
	rcp.rn.f32 	%f47, %f46;
	sub.f32 	%f48, %f16, %f9;
	mul.f32 	%f49, %f47, %f48;
	sub.f32 	%f50, %f14, %f9;
	mul.f32 	%f51, %f47, %f50;
	setp.gt.f32 	%p9, %f49, %f51;
	selp.f32 	%f52, %f49, %f51, %p9;
	selp.f32 	%f53, %f51, %f49, %p9;
	mul.f32 	%f54, %f52, 0f3F800006;
	setp.gt.f32 	%p10, %f53, %f11;
	selp.f32 	%f55, %f53, %f11, %p10;
	setp.lt.f32 	%p11, %f54, %f12;
	selp.f32 	%f56, %f54, %f12, %p11;
	setp.leu.f32 	%p12, %f55, %f56;
	@%p12 bra 	$L__BB0_5;

$L__BB0_4:
	ld.const.u64 	%rd16, [params+56];
	cvta.to.global.u64 	%rd17, %rd16;
	ld.global.u64 	%rd18, [%rd17+16];
	atom.add.u32 	%r6, [%rd18], 1;
	ld.global.u64 	%rd19, [%rd17];
	mul.wide.u32 	%rd20, %r6, 8;
	add.s64 	%rd21, %rd19, %rd20;
	st.u32 	[%rd21], %rd1;
	st.u32 	[%rd21+4], %r3;

$L__BB0_5:
	ret;

}
	// .globl	__raygen__intersects_envelope_query_2d_forward
.visible .entry __raygen__intersects_envelope_query_2d_forward()
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<16>;
	.reg .b32 	%r<82>;
	.reg .b64 	%rd<12>;


	// begin inline asm
	call (%r81), _optix_get_launch_index_x, ();
	// end inline asm
	cvt.u64.u32 	%rd11, %r81;
	ld.const.u64 	%rd2, [params+40];
	setp.le.u64 	%p1, %rd2, %rd11;
	@%p1 bra 	$L__BB1_3;

	ld.const.u64 	%rd7, [params+32];
	cvta.to.global.u64 	%rd3, %rd7;
	ld.const.u64 	%rd4, [params+48];
	// begin inline asm
	call (%r78), _optix_get_launch_dimension_x, ();
	// end inline asm

$L__BB1_2:
	shl.b64 	%rd9, %rd11, 4;
	add.s64 	%rd10, %rd3, %rd9;
	ld.global.v2.f32 	{%f10, %f11}, [%rd10+8];
	mov.u32 	%r77, 0;
	mov.u32 	%r45, 1;
	ld.global.v2.f32 	{%f13, %f14}, [%rd10];
	sub.f32 	%f4, %f13, %f10;
	sub.f32 	%f5, %f11, %f14;
	mov.f32 	%f8, 0f3F800000;
	mov.f32 	%f9, 0f00000000;
	mov.u32 	%r40, 255;
	// begin inline asm
	call(%r7,%r8,%r9,%r10,%r11,%r12,%r13,%r14,%r15,%r16,%r17,%r18,%r19,%r20,%r21,%r22,%r23,%r24,%r25,%r26,%r27,%r28,%r29,%r30,%r31,%r32,%r33,%r34,%r35,%r36,%r37,%r38),_optix_trace_typed_32,(%r77,%rd4,%f10,%f14,%f9,%f4,%f5,%f9,%f9,%f8,%f9,%r40,%r77,%r77,%r45,%r77,%r45,%r81,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77,%r77);
	// end inline asm
	add.s32 	%r81, %r78, %r7;
	cvt.u64.u32 	%rd11, %r81;
	setp.gt.u64 	%p2, %rd2, %rd11;
	@%p2 bra 	$L__BB1_2;

$L__BB1_3:
	ret;

}
	// .globl	__intersection__intersects_envelope_query_2d_backward
.visible .entry __intersection__intersects_envelope_query_2d_backward()
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<35>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<15>;


	// begin inline asm
	call (%r3), _optix_read_primitive_idx, ();
	// end inline asm
	mov.u32 	%r5, 0;
	// begin inline asm
	call (%r4), _optix_get_payload, (%r5);
	// end inline asm
	mov.u32 	%r7, 1;
	// begin inline asm
	call (%r6), _optix_get_payload, (%r7);
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_launch_dimension_y, ();
	// end inline asm
	rem.u32 	%r11, %r3, %r9;
	setp.ne.s32 	%p1, %r6, %r11;
	@%p1 bra 	$L__BB2_4;

	ld.const.u64 	%rd2, [params+16];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.const.u64 	%rd4, [params+32];
	cvta.to.global.u64 	%rd5, %rd4;
	mul.wide.u32 	%rd6, %r4, 16;
	add.s64 	%rd7, %rd3, %rd6;
	ld.global.v2.f32 	{%f7, %f8}, [%rd7];
	ld.global.v2.f32 	{%f9, %f10}, [%rd7+8];
	sub.f32 	%f11, %f9, %f7;
	mul.wide.u32 	%rd8, %r3, 16;
	add.s64 	%rd1, %rd5, %rd8;
	rcp.rn.f32 	%f12, %f11;
	ld.global.f32 	%f13, [%rd1];
	sub.f32 	%f14, %f13, %f7;
	mul.f32 	%f15, %f12, %f14;
	ld.global.f32 	%f16, [%rd1+8];
	sub.f32 	%f17, %f16, %f7;
	mul.f32 	%f18, %f12, %f17;
	setp.gt.f32 	%p2, %f15, %f18;
	selp.f32 	%f19, %f15, %f18, %p2;
	selp.f32 	%f20, %f18, %f15, %p2;
	mul.f32 	%f21, %f19, 0f3F800006;
	max.f32 	%f5, %f20, 0f00000000;
	min.f32 	%f6, %f21, 0f3F800001;
	setp.gt.f32 	%p3, %f5, %f6;
	@%p3 bra 	$L__BB2_4;

	sub.f32 	%f22, %f10, %f8;
	rcp.rn.f32 	%f23, %f22;
	ld.global.f32 	%f24, [%rd1+4];
	sub.f32 	%f25, %f24, %f8;
	mul.f32 	%f26, %f23, %f25;
	ld.global.f32 	%f27, [%rd1+12];
	sub.f32 	%f28, %f27, %f8;
	mul.f32 	%f29, %f23, %f28;
	setp.gt.f32 	%p4, %f26, %f29;
	selp.f32 	%f30, %f26, %f29, %p4;
	selp.f32 	%f31, %f29, %f26, %p4;
	mul.f32 	%f32, %f30, 0f3F800006;
	setp.gt.f32 	%p5, %f31, %f5;
	selp.f32 	%f33, %f31, %f5, %p5;
	setp.lt.f32 	%p6, %f32, %f6;
	selp.f32 	%f34, %f32, %f6, %p6;
	setp.gt.f32 	%p7, %f33, %f34;
	@%p7 bra 	$L__BB2_4;

	ld.const.u64 	%rd9, [params+56];
	cvta.to.global.u64 	%rd10, %rd9;
	ld.global.u64 	%rd11, [%rd10+16];
	atom.add.u32 	%r12, [%rd11], 1;
	ld.global.u64 	%rd12, [%rd10];
	mul.wide.u32 	%rd13, %r12, 8;
	add.s64 	%rd14, %rd12, %rd13;
	st.u32 	[%rd14], %r4;
	st.u32 	[%rd14+4], %r3;

$L__BB2_4:
	ret;

}
	// .globl	__raygen__intersects_envelope_query_2d_backward
.visible .entry __raygen__intersects_envelope_query_2d_backward()
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<15>;
	.reg .b32 	%r<89>;
	.reg .b64 	%rd<12>;


	// begin inline asm
	call (%r88), _optix_get_launch_index_x, ();
	// end inline asm
	cvt.u64.u32 	%rd11, %r88;
	ld.const.u64 	%rd2, [params+24];
	setp.le.u64 	%p1, %rd2, %rd11;
	@%p1 bra 	$L__BB3_7;

	ld.const.u64 	%rd8, [params+16];
	cvta.to.global.u64 	%rd3, %rd8;
	ld.const.u64 	%rd4, [params+48];
	// begin inline asm
	call (%r11), _optix_get_launch_index_y, ();
	// end inline asm
	cvt.rn.f32.u32 	%f7, %r11;
	// begin inline asm
	call (%r84), _optix_get_launch_dimension_x, ();
	// end inline asm

$L__BB3_2:
	shl.b64 	%rd9, %rd11, 4;
	add.s64 	%rd6, %rd3, %rd9;
	ld.global.f32 	%f1, [%rd6+8];
	ld.global.f32 	%f2, [%rd6];
	setp.geu.f32 	%p2, %f2, %f1;
	mov.u16 	%rs4, 0;
	@%p2 bra 	$L__BB3_4;

	ld.global.f32 	%f3, [%rd6+12];
	ld.global.f32 	%f4, [%rd6+4];
	setp.lt.f32 	%p3, %f4, %f3;
	selp.u16 	%rs4, 1, 0, %p3;

$L__BB3_4:
	setp.eq.s16 	%p4, %rs4, 0;
	@%p4 bra 	$L__BB3_6;

	ld.global.f32 	%f14, [%rd6+12];
	ld.global.f32 	%f6, [%rd6+4];
	sub.f32 	%f9, %f14, %f6;
	sub.f32 	%f8, %f1, %f2;
	mov.f32 	%f12, 0f3F800000;
	mov.f32 	%f13, 0f00000000;
	mov.u32 	%r46, 255;
	mov.u32 	%r49, 1;
	mov.u32 	%r51, 2;
	mov.u32 	%r83, 0;
	// begin inline asm
	call(%r88,%r14,%r15,%r16,%r17,%r18,%r19,%r20,%r21,%r22,%r23,%r24,%r25,%r26,%r27,%r28,%r29,%r30,%r31,%r32,%r33,%r34,%r35,%r36,%r37,%r38,%r39,%r40,%r41,%r42,%r43,%r44),_optix_trace_typed_32,(%r83,%rd4,%f2,%f6,%f7,%f8,%f9,%f13,%f13,%f12,%f13,%r46,%r83,%r83,%r49,%r83,%r51,%r88,%r11,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83,%r83);
	// end inline asm

$L__BB3_6:
	add.s32 	%r88, %r84, %r88;
	cvt.u64.u32 	%rd11, %r88;
	setp.gt.u64 	%p5, %rd2, %rd11;
	@%p5 bra 	$L__BB3_2;

$L__BB3_7:
	ret;

}
	// .weak	_ZN3cub17CUB_200200_750_NS11EmptyKernelIvEEvv
.weak .entry _ZN3cub17CUB_200200_750_NS11EmptyKernelIvEEvv()
{



	ret;

}

